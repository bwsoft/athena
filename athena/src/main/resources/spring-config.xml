<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd ">

	<context:annotation-config />

	<!-- AOP to enable the call trace  -->
	<bean id="aspectToTraceCall" class="com.bwsoft.athena.util.AspectToTraceCall"/>

	<bean id="nioSelector" class="com.bwsoft.athena.nio.NIOSelector"
		scope="singleton" lazy-init="false" />

	<!-- depends-on is added to enforce nioSelector is created first (not necessary). 
		lazy-init is added. Otherwise the bean will be created even there is no explicit 
		usage in the code. -->
	<bean id="asyncMulticastListener" class="com.bwsoft.athena.nio.AsyncMulticastListener"
		init-method="init" destroy-method="destroy" depends-on="nioSelector"
		lazy-init="true">
		<constructor-arg type="java.lang.String" value="wlan0" />
		<constructor-arg type="java.lang.String" value="230.230.230.100" />
		<constructor-arg type="int" value="20023" />
		<property name="nioSelector" ref="nioSelector" />
	</bean>

	<bean id="multicastSender" class="com.bwsoft.athena.nio.MulticastSender"
		lazy-init="true">
		<constructor-arg type="java.lang.String" value="wlan0"/>
		<constructor-arg type="java.lang.String" value="230.230.230.100" />
		<constructor-arg type="int" value="20023" />
		<property name="repeat" value="100"/>
		<property name="sendingInterval" value="1000"/>
	</bean>

	<!-- Demo of asymmetric public/private key encryption -->
	<bean id="rsaCipher" class="com.bwsoft.athena.ssl.RSACipher" lazy-init="true">
		<property name="publicKeyFile" value="src/main/resources/public.key"/>
		<property name="privateKeyFile" value="src/main/resources/private.der"/>
		<property name="transformation" value="RSA/ECB/PKCS1Padding"/>
	</bean>
	
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	<aop:config>		
		<aop:aspect id="traceCall" ref="aspectToTraceCall">
			<aop:pointcut expression="@annotation(com.bwsoft.athena.util.TraceCall)" id="callTrace"/>
			
			<aop:before method="beforeCall" arg-names="joinPoint" pointcut-ref="callTrace"/>
			<aop:after-returning method="returnCall" returning="retValue" pointcut-ref="callTrace"/>
			<aop:after-throwing method="throwException" pointcut-ref="callTrace"/>
		</aop:aspect>
	</aop:config>
</beans>