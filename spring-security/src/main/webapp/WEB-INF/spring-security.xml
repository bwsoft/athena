<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-4.1.xsd">

    <!-- enable use-expressions -->
	<http auto-config="true" use-expressions="true">
		
		<intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" />
		
		<!-- access denied page -->
		<access-denied-handler error-page="/403" />
		
		<form-login 
		    login-processing-url="/j_spring_security_check"
		    login-page="/login" 
		    default-target-url="/welcome" 
			authentication-failure-url="/login?error" 
			username-parameter="username"
			password-parameter="password" 
		/>
			
		<logout logout-success-url="/login?logout" 
				logout-url="/j_spring_security_logout"
				delete-cookies="JSESSIONID"
		 />
		
		<!-- 
			A new session ID will be created and all of the old session data will be lost.
			It is to protect against session fixation.
		 -->
		<session-management session-fixation-protection="newSession">
			<concurrency-control max-sessions="1" error-if-maximum-exceeded="true"/>
		</session-management>
		
		<custom-filter before="CONCURRENT_SESSION_FILTER" ref="sampleFilter"/>
		
		<!-- enable csrf protection -->
		<csrf/>
	</http>
	
	<!-- Select users and user_roles from database -->
  	<authentication-manager>
	  <authentication-provider user-service-ref="CustomerizedUserDetailService"/>
	</authentication-manager>

    <beans:bean id="CustomerizedUserDetailService" class="com.bwsoft.poc.security_check.CustomerizedUserDetailService">
    	<beans:property name="dsName" value="jdbc/poc"/>
    </beans:bean>
	
	<beans:bean id="sampleFilter" class="com.bwsoft.poc.security_check.SampleFilter"></beans:bean>
</beans:beans>
